<?php

namespace Servebolt\Optimizer\CronControl\Cronjobs;

if (!defined('ABSPATH')) exit; // Exit if accessed directly

use Servebolt\Optimizer\Traits\Singleton;

abstract class AbstractCommand
{
    use Singleton;

    /**
     * @var string Template used when generating cronjob comment.
     */
    private static $commentTemplate = 'Generated by Servebolt Optimizer (name=%s,rev=%s)';

    /**
     * Generate the comment that will be passed as meta data for the cronjob. This is later used for identification.
     *
     * @return string
     */
    public static function generateComment(): string
    {
        return sprintf(
            self::$commentTemplate,
            static::$commandName,
            static::$commandRevision
        );
    }

    /**
     * Get command interval.
     *
     * @return mixed|string
     */
    public static function getInterval()
    {
        /**
         * @param string $preferredInterval At what interval the command should be run.
         * @param string $context The name of the command.
         */
        return apply_filters(
            'sb_optimizer_cron_control_command_interval',
            static::$preferredInterval,
            static::$commandName
        );
    }

    /**
     * Get full crontab row for command.
     *
     * @return mixed|string
     */
    public static function generateCronjob($includeComment = true)
    {
        $cronjob = self::getInterval() . ' ' . static::generateCommand();
        if ($includeComment) {
            $cronjob .= ' ' . self::generateComment();
        }
        /**
         * @param string $cronjob The full row to be inserted into the crontab.
         * @param string $context The name of the command.
         */
        return apply_filters(
            'sb_optimizer_cron_control_command_interval',
            $cronjob,
            static::$commandName
        );
    }
}
